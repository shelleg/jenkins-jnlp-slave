pipeline
{
    options {
      buildDiscarder(logRotator(numToKeepStr: '5'))
    }
      agent {
      node {
        label 'generic'
        }
    }
    environment
    {
        VERSION   = 'latest'
        PROJECT   = 'shelleg/jenkins-jnlp-slave'
        IMAGE     = "${PROJECT}/${VERSION}:latest"
    }
    stages
    {
        stage('Build preparations')
        {
            steps
            {
                script
                {
                    // calculate GIT lastest commit short-hash
                    gitCommitHash = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
                    shortCommitHash = gitCommitHash.take(7)
                    // calculate a sample version tag
                    VERSION = shortCommitHash
                    // set the build display name
                    currentBuild.displayName = "#${BUILD_ID}-${VERSION}"
                    IMAGE = "$PROJECT:$VERSION"
                    IMAGE_LATEST = "$PROJECT:latest"
                }
            }
        }
    stage('Docker build') {
      steps {
          script {
                  // Build the docker image using a Dockerfile
                  docker.build("$IMAGE")
                  // override the latest tag
                  docker.build("$IMAGE_LATEST")
      		        }
	          }
    }
    stage('Publish') {
      steps {
        withDockerRegistry([ credentialsId: "dockerHub", url: "" ]){
          script {
                	// version eq latest git tag
                	docker.image("$IMAGE").push()
                	// override the latest tag
                	docker.image("$IMAGE_LATEST").push()
        	}
        }
      }
    }
  }
}
